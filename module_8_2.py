def personal_sum(numbers):                                           # Функция personal_sum(numbers)
    result = 0                                                       # начало отсчета
    incorrect_data = 0                                               # Начало отсчета
    for i in numbers:                                    # одсчитывать сумму чисел в numbers путём перебора
        try:
            result += i                                     # Увеличиваем переменную result
        except TypeError:                                            # Обрабатываем исключение по неверному типу данных
            incorrect_data += 1                                      # Увеличив счётчик incorrect_data на 1.
            print(f"Некорректный тип данных для подсчёта суммы "
                  f"- {i}")
    return result, incorrect_data                                    # Возвращает кортеж из двух значений

#Функция calculate_average(numbers)
#Должна принимать коллекцию numbers и возвращать: среднее арифметическое всех чисел.
#Внутри для подсчёта суммы используйте функцию personal_sum написанную ранее.
#Т.к. коллекция numbers может оказаться пустой, то обработайте исключение ZeroDivisionError при делении на 0 и верните 0.
#Также в numbers может быть записана не коллекция, а другие типы данных, например числа.
# Обработайте исключение TypeError выводя строку 'В numbers записан некорректный тип данных'.
# В таком случае функция просто вернёт None.
#

def calculate_average(numbers):
    try:
        sum_numbers, incorrect_data = personal_sum(numbers)
        if len(numbers) - incorrect_data == 0:
            raise ZeroDivisionError
        return sum_numbers / (len(numbers) - incorrect_data)
    except ZeroDivisionError:
        return 0
    except TypeError:
        print("В numbers записан некорректный тип данных")
    return None


#Пример выполнения программы
print(f'Результат 1: {calculate_average("1, 2, 3")}')          # Строка перебирается, но каждый символ - строковый тип
print(f'Результат 2: {calculate_average([1, "Строка", 3, "Ещё Строка"])}')                  # Учитываются только 1 и 3
print(f'Результат 3: {calculate_average(567)}')                                                 # Передана не коллекция
print(f'Результат 4: {calculate_average([42, 15, 36, 13])}')                                    # Всё должно работать

#Некорректный тип данных для подсчёта суммы - 1
#Некорректный тип данных для подсчёта суммы - ,
#Некорректный тип данных для подсчёта суммы -
#Некорректный тип данных для подсчёта суммы - 2
#Некорректный тип данных для подсчёта суммы - ,
#Некорректный тип данных для подсчёта суммы -
#Некорректный тип данных для подсчёта суммы - 3
#Результат 1: 0
#Некорректный тип данных для подсчёта суммы - Строка
#Некорректный тип данных для подсчёта суммы - Ещё Строка
#Результат 2: 2.0
#В numbers записан некорректный тип данных
#Результат 3: None
#Результат 4: 26.5